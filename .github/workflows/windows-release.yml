#for testing only
on: [push]
#real one is this one
#on:
#  push:
#    # Sequence of patterns matched against refs/tags
#    tags:
#    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
name: Javascript build release
jobs:
  windows:
    runs-on: windows-latest
    strategy:
      matrix:
        configuration: [Release]
    steps:
    - uses: actions/checkout@v1
      with:
        submodules: recursive
    - name: Build    
      run: |
        mkdir build
        cd build
        cmake ../ -DBUILD_TESTS=ON
        cmake --build . --config ${{matrix.configuration}} 
    - name: Run tests
      run: |
        cd build/bin/${{matrix.configuration}}
        ./Tests.exe
    - uses: mymindstorm/setup-emsdk@v4
    - name: Setup Emscripten toolchain
      run: |
        #cd build
        #git clone https://github.com/emscripten-core/emsdk.git
        #cd emsdk
        #.\emsdk activate latest
        #.\emsdk_env.bat
        cd customBuild/
        .\build-js.bat
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          #tag_name: ${{ github.ref }}
          #release_name: Release ${{ github.ref }}
        tag_name: 0.0.1 
        release_name: 0.0.1
        draft: false
        prerelease: false
    - name: Upload wasm 
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} 
        # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: build/mono/js/bind.wasm
        asset_name: bind.wasm
        asset_content_type: application/wasm

    - name: Upload js 
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} 
        # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: build/mono/js/bind.js
        asset_name: bind.js
        asset_content_type: application/javascript

